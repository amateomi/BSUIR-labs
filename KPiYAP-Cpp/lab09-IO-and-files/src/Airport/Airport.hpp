#ifndef LAB09_INPUT__OUTPUT_AND_FILE_HANDLING_AIRPORT_HPP
#define LAB09_INPUT__OUTPUT_AND_FILE_HANDLING_AIRPORT_HPP

#include <cctype>
#include <cstring>

#include <iostream>
#include <fstream>

class Airport {
private:
    ///////////////////////////////////////////////////////////////////////////
    // Fields /////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    std::string name{"none"};
    int aircraftAmount{};
    int passengersPerDay{};

public:
    ///////////////////////////////////////////////////////////////////////////
    // Constructors and destructors ///////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    explicit Airport() = default;

    Airport(std::string name, int aircraftAmount, int passengersPerDay);

    virtual ~Airport() = default;

    ///////////////////////////////////////////////////////////////////////////
    // Getters and setters ////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    const std::string& getName() const;

    void setName(const std::string& name);

    int getAircraftAmount() const;

    void setAircraftAmount(int aircraftAmount);

    int getPassengersPerDay() const;

    void setPassengersPerDay(int passengersPerDay);

    ///////////////////////////////////////////////////////////////////////////
    // I/O overloads //////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    friend std::istream& operator>>(std::istream& source, Airport& airport);

    friend std::ostream& operator<<(std::ostream& target, const Airport& airport);

    friend std::ifstream& operator>>(std::ifstream& source, Airport& airport);

    friend std::ofstream& operator<<(std::ofstream& target, const Airport& airport);

    ///////////////////////////////////////////////////////////////////////////
    // Text files handling ////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    // Read data for class fields
    void readText(std::ifstream& file);

    // Write line of class data to the end of file
    void writeText(std::ofstream& file);

    ///////////////////////////////////////////////////////////////////////////
    // Binary file handling ///////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    // Read data for class fields
    void readBin(std::ifstream& file);

    // Write data to the end of file
    void writeBin(std::ofstream& file);

};

#endif //LAB09_INPUT__OUTPUT_AND_FILE_HANDLING_AIRPORT_HPP
